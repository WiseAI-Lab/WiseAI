# Generated by Django 3.1.4 on 2021-01-15 05:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AgentBehaviourModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'agent_behaviour',
            },
        ),
        migrations.CreateModel(
            name='AgentRepositoryModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(null=True)),
                ('is_verify', models.BooleanField(db_index=True, null=True)),
                ('is_private', models.BooleanField(db_index=True, null=True)),
                ('is_archived', models.BooleanField(db_index=True, null=True)),
                ('is_mirror', models.BooleanField(db_index=True, null=True)),
                ('is_office', models.BooleanField(db_index=True, default=False, verbose_name='office or user defined')),
                ('num_watches', models.IntegerField(null=True, verbose_name=11)),
                ('num_stars', models.IntegerField(null=True, verbose_name=11)),
                ('status', models.BooleanField()),
                ('is_template', models.BooleanField(default=False)),
                ('template_id', models.IntegerField(db_index=True, default=0, null=True, verbose_name=11)),
                ('avatar', models.URLField(null=True)),
            ],
            options={
                'db_table': 'agent_repository',
            },
        ),
        migrations.CreateModel(
            name='BehaviourRepositoryModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(null=True)),
                ('is_verify', models.BooleanField(db_index=True, null=True)),
                ('is_private', models.BooleanField(db_index=True, null=True)),
                ('is_archived', models.BooleanField(db_index=True, null=True)),
                ('is_mirror', models.BooleanField(db_index=True, null=True)),
                ('is_office', models.BooleanField(db_index=True, default=False, verbose_name='office or user defined')),
                ('num_watches', models.IntegerField(null=True, verbose_name=11)),
                ('num_stars', models.IntegerField(null=True, verbose_name=11)),
                ('status', models.BooleanField()),
                ('is_template', models.BooleanField(default=False)),
                ('template_id', models.IntegerField(db_index=True, default=0, null=True, verbose_name=11)),
                ('avatar', models.URLField(null=True)),
            ],
            options={
                'db_table': 'behaviour_repository',
            },
        ),
        migrations.CreateModel(
            name='CategoryModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('parent', models.IntegerField(default=0)),
                ('type', models.SmallIntegerField(choices=[(1, 'agent'), (2, 'behaviour')], default=1)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='ConfigurationModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('content', models.TextField(default='{}')),
                ('required_content', models.TextField(default='{}')),
            ],
            options={
                'db_table': 'agent_configuration',
            },
        ),
        migrations.CreateModel(
            name='BehaviourTopicModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'alive'), (2, 'stop'), (3, 'dead')], default=1)),
                ('url', models.URLField(blank=True, null=True)),
                ('store_type', models.SmallIntegerField(choices=[(1, 'zip'), (2, 'git')], default=2)),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.configurationmodel')),
            ],
            options={
                'db_table': 'behaviour_topic',
            },
        ),
        migrations.CreateModel(
            name='BehaviourRepoTopicModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('repo_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.behaviourrepositorymodel')),
                ('top_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.behaviourtopicmodel')),
            ],
            options={
                'db_table': 'behaviour_repo_topic',
            },
        ),
        migrations.AddField(
            model_name='behaviourrepositorymodel',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='agents.categorymodel'),
        ),
        migrations.AddField(
            model_name='behaviourrepositorymodel',
            name='configuration_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.configurationmodel'),
        ),
        migrations.AddField(
            model_name='behaviourrepositorymodel',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='behaviourrepositorymodel',
            name='topics',
            field=models.ManyToManyField(through='agents.BehaviourRepoTopicModel', to='agents.BehaviourTopicModel'),
        ),
        migrations.CreateModel(
            name='AgentTopicModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('description', models.TextField(null=True)),
                ('status', models.SmallIntegerField(choices=[(1, 'alive'), (2, 'stop'), (3, 'dead')], default=1)),
                ('url', models.URLField(blank=True, null=True)),
                ('store_type', models.SmallIntegerField(choices=[(1, 'zip'), (2, 'git')], default=2)),
                ('behaviours', models.ManyToManyField(through='agents.AgentBehaviourModel', to='agents.BehaviourTopicModel')),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.configurationmodel')),
            ],
            options={
                'db_table': 'agent_topic',
            },
        ),
        migrations.CreateModel(
            name='AgentRepoTopicModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('repo_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.agentrepositorymodel')),
                ('top_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.agenttopicmodel')),
            ],
            options={
                'db_table': 'agent_repo_topic',
            },
        ),
        migrations.AddField(
            model_name='agentrepositorymodel',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='agents.categorymodel'),
        ),
        migrations.AddField(
            model_name='agentrepositorymodel',
            name='configuration_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.configurationmodel'),
        ),
        migrations.AddField(
            model_name='agentrepositorymodel',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='agentrepositorymodel',
            name='topics',
            field=models.ManyToManyField(through='agents.AgentRepoTopicModel', to='agents.AgentTopicModel'),
        ),
        migrations.AddField(
            model_name='agentbehaviourmodel',
            name='a_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.agenttopicmodel'),
        ),
        migrations.AddField(
            model_name='agentbehaviourmodel',
            name='b_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agents.behaviourtopicmodel'),
        ),
    ]
